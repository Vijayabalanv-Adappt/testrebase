{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "environmentName": {
      "defaultValue": "t",
      "allowedValues": [
        "t",
        "p"
      ],
      "type": "String",
      "metadata": {
        "description": "The type of environment to create."
      }
    },
    "appserviceSKUName": {
      "defaultValue": "B1",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ],
      "type": "String",
      "metadata": {
        "description": "Describes plan's pricing tier and instance size. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
      }
    },
    "appserviceSKUCapacity": {
      "defaultValue": 1,
      "minValue": 1,
      "type": "Int",
      "metadata": {
        "description": "Describes plan's instance count"
      }
    },
    "appInsightName": {
      "type": "string",
      "metadata": {
        "description": "App insight name"
      }
    },
    "administratorLogin": {
      "type": "String",
      "metadata": {
        "description": "The admin user of the SQL Server"
      }
    },
    "administratorLoginPassword": {
      "type": "SecureString",
      "metadata": {
        "description": "The password of the admin user of the SQL Server"
      }
    },
    "databaseName": {
      "type": "String",
      "metadata": {
        "description": "The name of the new database to create."
      }
    },
    "SkuTier": {
      "type": "string",
      "defaultValue": "Burstable",
      "allowedValues": [
        "GeneralPurpose",
        "MemoryOptimized",
        "Burstable"
      ],
      "metadata": {
        "description": "Azure database for MySQL pricing tier"
      }
    },
    "skuName": {
      "type": "string",
      "defaultValue": "Standard_B1s",
      "metadata": {
        "description": "Azure database for MySQL sku name "
      }
    },
    "StorageSizeGB": {
      "type": "int",
      "defaultValue": 20,
      "metadata": {
        "description": "Azure database for MySQL storage Size "
      }
    },
    "StorageIops": {
      "type": "int",
      "defaultValue": 360,
      "metadata": {
        "description": "Azure database for MySQL storage Iops"
      }
    },
    "mysqlVersion": {
      "type": "string",
      "defaultValue": "8.0.21",
      "allowedValues": [
        "5.7",
        "8.0.21"
      ],
      "metadata": {
        "description": "MySQL version"
      }
    },
    "backupRetentionDays": {
      "type": "int",
      "defaultValue": 7,
      "metadata": {
        "description": "MySQL Server backup retention days"
      }
    },
    "geoRedundantBackup": {
      "type": "string",
      "defaultValue": "Disabled",
      "metadata": {
        "description": "Geo-Redundant Backup setting"
      }
    },
    "collation": {
      "defaultValue": "utf8_general_ci",
      "type": "String",
      "metadata": {
        "description": "The database collation for governing the proper use of characters."
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_ZRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "Storage Account type"
      }
    },
    "location": {
      "defaultValue": "[resourceGroup().location]",
      "type": "String",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {
    "hostingplan": "[concat('hostingplan', '-', parameters('environmentName'), '-', 'ginatmp')]",
    "webapp": "[concat('webapp', '-', parameters('environmentName'), '-', 'ginatmp')]",
    "appInsightName": "[parameters('appInsightName')]",
    "sqlserverName": "[concat('sqlserver', '-', parameters('environmentName'), '-', 'ginatmp')]",
    "storage": "[concat('storage', parameters('environmentName'), 'ginatmp')]",
    "container": "ginatmp"
  },
  "resources": [
    {
      "type": "Microsoft.DBforMySQL/flexibleServers",
      "apiVersion": "2021-05-01",
      "name": "[variables('sqlserverName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('skuName')]",
        "tier": "[parameters('SkuTier')]"
      },
      "properties": {
        "administratorLogin": "[parameters('administratorLogin')]",
        "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
        "storage": {
          "autoGrow": "Enabled",
          "iops": "[parameters('StorageIops')]",
          "storageSizeGB": "[parameters('StorageSizeGB')]"
        },
        "createMode": "Default",
        "version": "[parameters('mysqlVersion')]",
        "backup": {
          "backupRetentionDays": "[parameters('backupRetentionDays')]",
          "geoRedundantBackup": "[parameters('geoRedundantBackup')]"
        },
        "highAvailability": {
          "mode": "Disabled"
        } 
       }
      },
      {
        "type": "Microsoft.DBforMySQL/flexibleServers/databases",
        "apiVersion": "2021-05-01",
        "name": "[concat(variables('sqlserverName'), '/', parameters('databaseName'))]",
        "dependsOn": [
          "[resourceId('Microsoft.DBforMySQL/flexibleServers', variables('sqlserverName'))]"
        ],
        "properties": {
          "charset": "utf8",
          "collation": "utf8_general_ci"
        }
      },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2015-08-01",
      "name": "[variables('hostingplan')]",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "HostingPlan"
      },
      "sku": {
        "name": "[parameters('appserviceSKUName')]",
        "capacity": "[parameters('appserviceSKUCapacity')]"
      },
      "properties": {
        "name": "[variables('hostingplan')]"
      }
    },
    {
      "name": "[variables('appInsightName')]",
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02-preview",
      "location": "[parameters('location')]",
      "tags": {},
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "DisableIpMasking": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2015-08-01",
      "name": "[variables('webapp')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Web/serverFarms/', variables('hostingplan'))]"
      ],
      "tags": {
        "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('hostingplan'))]": "empty",
        "displayName": "Website"
      },
      "properties": {
        "name": "[variables('webapp')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingplan'))]",
        "httpsOnly": true
      },
      "resources": [
        {
          "type": "config",
          "apiVersion": "2016-08-01",
          "name": "connectionstrings",
          "dependsOn": [
            "[concat('Microsoft.Web/Sites/', variables('webapp'))]",
            "[concat('Microsoft.DBforMySQL/flexibleServers/', variables('sqlserverName'))]"
          ],
          "properties": {
            "MySqlConnection": {
              "value": "[concat('server=', reference(concat('Microsoft.DBforMySQL/flexibleServers/', variables('sqlserverName'))).fullyQualifiedDomainName, ';port=3306; database=', parameters('databaseName'), ';user=', parameters('administratorLogin')';Password=', parameters('administratorLoginPassword'), ';Persist Security Info=False; Connect Timeout=300;')]",
              "type": "Custom"
            }
          }
        },
        {
          "type": "config",
          "apiVersion": "2016-08-01",
          "name": "appsettings",
          "dependsOn": [
            "[concat('Microsoft.Web/Sites/', variables('webapp'))]",
            "[concat('Microsoft.Insights/components/', variables('appInsightName'))]"
          ],
          "properties": {
            "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightName')), '2018-05-01-preview').InstrumentationKey]",
            "ContainerName": "[variables('container')]",
            "AzureBlobAccessKey": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storage'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storage')), '2019-06-01').keys[0].value, ';EndpointSuffix=core.windows.net')]"          }
        },
        {
          "type": "Microsoft.Web/sites/config",
          "apiVersion": "2021-01-15",
          "name": "[concat(variables('webapp'), '/web')]",
          "location": "[parameters('location')]",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('webapp'))]"
          ],
          "properties": {
            "numberOfWorkers": 1,
            "defaultDocuments": [
              "Default.htm",
              "Default.html",
              "Default.asp",
              "index.htm",
              "index.html",
              "iisstart.htm",
              "default.aspx",
              "index.php",
              "hostingstart.html"
            ],
            "netFrameworkVersion": "v6.0",
            "metadata": [ 
              { 
                "name": "CURRENT_STACK",
                "value": "dotnetcore" 
              } 
            ],
            "webSocketsEnabled": true,
            "alwaysOn": true
          }
        }
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[variables('storage')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('storageAccountType')]"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "Hot"
      },
      "resources": [
        {
          "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
          "apiVersion": "2019-06-01",
          "name": "[concat(variables('storage'), '/default/', variables('container'))]",
          "dependsOn": [
            "[variables('storage')]"
          ],
          "properties": {
            "publicAccess": "None"
          }
        }
      ]
    }
  ]
}